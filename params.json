{"name":"Pickling-avro","tagline":"Scala-pickling support for serializing arbitrary types to Avro binary, as well as generating Avro schemas for those types.","body":"# pickling-avro\r\n\r\n## Usage (planned)\r\n\r\n```scala\r\nimport scala.pickling._\r\nimport io.topology.pickling.avro.binary_\r\n\r\n// a simple ADT for people\r\ncase class Person(name: String, age: Int)\r\n\r\n// generate an Avro schema for type Person\r\nval personSchema = implicitly[[SPickler[Person]]].schema\r\n\r\n// an instance of Person\r\nval originalAlan = Person(\"Alan Turing\", 42)\r\n\r\n// serialize the instance\r\nval bytes = originalAlan.pickle.value\r\n\r\n// reconstitute \r\nval unpickledAlan = AvroBinaryPickle(bytes).unpickle[Person]\r\n\r\nunpickledAlan == originalAlan  // true\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}